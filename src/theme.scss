@use "@angular/material" as mat;

@include mat.core();

$primary: mat.define-palette(mat.$deep-purple-palette);
$accent: mat.define-palette(mat.$green-palette, A200, A100, A400);
$warn: mat.define-palette(mat.$pink-palette);
$alt: mat.define-palette(mat.$grey-palette, A100, A200, A400, A700);
$my_dark: mat.define-palette(mat.$grey-palette, 700, 800, 900);
$my_grey: mat.define-palette(mat.$grey-palette, 400, 500, 600);
$my_light: mat.define-palette(mat.$grey-palette, 100, 200, 300);

$theme: mat.define-light-theme(
  (
    color: (
      primary: $primary,
      accent: $accent,
      warn: $warn,
      alt: $alt,
      my_light: $my_light,
      my_grey: $my_grey,
      my_dark: $my_dark,
    ),
  )
);
$theme: mat.define-dark-theme(
  (
    color: (
      primary: $primary,
      accent: $accent,
      warn: $warn,
      alt: $alt,
      my_light: $my_light,
      my_grey: $my_grey,
      my_dark: $my_dark,
    ),
  )
);

@include mat.core-theme($theme);
@include mat.all-component-themes($theme);

@include mat.button-theme($theme);
@include mat.input-theme($theme);

body {
  background-color: mat.get-color-from-palette($my_dark, 900);
  color: mat.get-color-from-palette($my_grey, 400);
}

nav {
  .btn-primary,
  .search button {
    background-color: mat.get-color-from-palette($primary, 500);
  }
}
errors {
  color: mat.get-color-from-palette($warn, 500);
}

#cdk-step-content-0-0 > form > div.create-grid > div.row1 > div > div > button {
  background-color: mat.get-color-from-palette($accent, A200);
}

.create-dialog mat-card.flashcard {
  background-color: rgba(mat.get-color-from-palette($my_dark, 700), 0.5) !important;
}

.block:hover {
  color: mat.get-color-from-palette($primary, A200);
}
mat-card > mat-card-actions > button.selected {
  background-color: mat.get-color-from-palette($primary, 500);
  transition: background-color 0.15s ease-in-out;
}
quiz-result {
  .spiner {
    .incorrect > svg > circle {
      stroke: mat.get-color-from-palette($warn, 700) !important;
    }
    .total > svg > circle {
      stroke: mat.get-color-from-palette($primary, 700) !important;
    }
    & > * > svg > circle {
      transition: stroke-dashoffset 1.5s cubic-bezier(1, -0.01, 0.25, 1.25) !important;
    }

    .info {
      .correct {
        color: mat.get-color-from-palette($accent, A200);
      }
      .incorrect {
        color: mat.get-color-from-palette($warn, 500);
      }
    }
  }
}
