@use "@angular/material" as mat;

@include mat.core();
$my-primary: mat.define-palette(mat.$deep-purple-palette);
$my-accent: mat.define-palette(mat.$green-palette, A200, A100, A400);
$my-warn: mat.define-palette(mat.$pink-palette);
$my-alt: mat.define-palette(mat.$grey-palette, A100, A200, A400, A700);
$my-dark: mat.define-palette(mat.$grey-palette, 700, 800, 900);
$my-grey: mat.define-palette(mat.$grey-palette, 400, 500, 600);
$my-light: mat.define-palette(mat.$grey-palette, 100, 200, 300);

$my-theme: mat.define-light-theme(
  (
    color: (
      primary: $my-primary,
      accent: $my-accent,
      warn: $my-warn,
      alt: $my-alt,
      my-light: $my-light,
      my-grey: $my-grey,
      my-dark: $my-dark,
    ),
  )
);
$my-theme: mat.define-dark-theme(
  (
    color: (
      primary: $my-primary,
      accent: $my-accent,
      warn: $my-warn,
      alt: $my-alt,
      my-light: $my-light,
      my-grey: $my-grey,
      my-dark: $my-dark,
    ),
  )
);

@include mat.all-component-themes($my-theme);

@include mat.core-theme($my-theme);
@include mat.button-theme($my-theme);

:root {
  --my-primary: #{mat.get-color-from-palette($my-primary, 400)};
  --my-accent: #{mat.get-color-from-palette($my-accent, A200)};
  --my-warn: #{mat.get-color-from-palette($my-warn, 500)};
}

body {
  background-color: mat.get-color-from-palette($my-dark, 900);
  color: mat.get-color-from-palette($my-grey, 400);
}
navbar {
  z-index: 1000;
  nav {
    @include mat.elevation(2);
  }
}

.mat-mdc-snack-bar-container {
  --mat-mdc-snack-bar-button-color: #{mat.get-color-from-palette($my-accent, A200)};
  --mdc-snackbar-container-color: #{mat.get-color-from-palette($my-dark, 800)};
  --mdc-snackbar-supporting-text-color: #{mat.get-color-from-palette($my-grey, 300)};
}

errors {
  color: mat.get-color-from-palette($my-warn, 500);
}

#cdk-step-content-0-0 > form > div.create-grid > div.row1 > div > div > button {
  background-color: mat.get-color-from-palette($my-accent, A200);
}

.create-dialog mat-card.flashcard {
  background-color: mat.get-color-from-palette($my-dark, 700) !important;
}

.block:hover {
  color: mat.get-color-from-palette($my-primary, A200);
}
.question button {
  transition: background-color 0.15s ease-in-out;
  -webkit-transition: background-color 0.15s ease-in-out;
  -moz-transition: background-color 0.15s ease-in-out;
  -ms-transition: background-color 0.15s ease-in-out;
  -o-transition: background-color 0.15s ease-in-out;
  &.selected {
    background-color: mat.get-color-from-palette($my-primary, 500);
  }
}
app-lesson {
  aside.menu {
    .block {
      color: mat.get-color-from-palette($my-grey, 400);
    }
    &.flashcards :nth-child(1).block,
    &.learn :nth-child(2).block,
    &.quiz :nth-child(3).block,
    &.comments :nth-child(4).block {
      color: mat.get-color-from-palette($my-primary, 400);
    }
  }
}
quiz-result {
  .spiner {
    .incorrect > svg > circle {
      stroke: mat.get-color-from-palette($my-warn, 700) !important;
      transform: rotateX(180deg);
    }
    .total > svg > circle {
      stroke: mat.get-color-from-palette($my-primary, 700) !important;
    }
    & > * > svg > circle {
      transition: stroke-dashoffset 1.5s cubic-bezier(1, -0.01, 0.25, 1.25) !important;
    }
  }
  .cards mat-card {
    background-color: rgba(mat.get-color-from-palette($my-dark, 700), 0.5) !important;
  }
}

#chat .user {
  color: mat.get-color-from-palette($my-grey, 50);
  background-color: mat.get-color-from-palette($my-dark, 700);
}

.correct,
.accent,
.accent-hover:hover {
  color: mat.get-color-from-palette($my-accent, A200);
}
.incorrect,
.warn,
.warn-hover:hover {
  color: mat.get-color-from-palette($my-warn, 500);
}
.total,
.primary,
.primary-hover:hover {
  color: mat.get-color-from-palette($my-primary, 400);
}

.primary,
.primary-hover,
.accent,
.accent-hover,
.warn,
.warn-hover,
.total,
.correct,
.incorrect {
  transition: color 0.25s ease-in-out;
}

.message {
  background-color: mat.get-color-from-palette($my-primary, 500);
}
